@mixin font-family-quicksand {
  font-family: Quicksand, sans-serif;
}

@mixin font-family-roboto {
  font-family: Roboto, sans-serif;
}

@mixin background-liner-gadient {
  background-image: linear-gradient(106deg, #1640a2 16%, #1b1464 78%);
}

@mixin features-card {
  background-color: $white-color;
  border: solid 1px $light-gray;
  border-radius: 14px;
  height: 100%;
  margin-bottom: 1rem;
  min-height: 274px;
  padding: 1rem 1.5rem;
}

// common css for btn
@mixin primary-btn {
  background-color: $orange-color;
  border-color: $orange-color;
  border-radius: 10px;
  box-shadow: 0 15px 25px 0 rgb(2 28 78 / 33%);
  color: $white-color;
  font-size: 1.25rem;
  font-weight: 500;
  letter-spacing: 0.52px;
  line-height: normal;
  padding: 1.2rem 2.5rem;
  text-align: center;

  &:hover {
    background-color: $white-color;
    border-color: $white-color;
    box-shadow: 0 15px 25px 0 rgba(2 28 78 / 33%);
    color: $orange-color;
  }

  &:focus {
    background-color: $white-color;
    border-color: $white-color;
    box-shadow: 0 15px 25px 0 rgb(2 28 78 / 33%);
    color: $orange-color;
  }

  &:active {
    background-color: $white-color;
    border-color: $white-color;
    box-shadow: 0 15px 25px 0 rgb(2 28 78 / 33%);
    color: $orange-color;
  }

  .active {
    background-color: $white-color;
    border-color: $white-color;
    box-shadow: 0 15px 25px 0 rgb(2 28 78 / 33%);
    color: $orange-color;
  }
}

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* @inculde
  .test {
    @include truncate(40px);
  }
 */

// media query
@mixin respond-to-max($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin respond-to-min($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

// @include respond-to-min($tablet){ }
// @include respond-to-max($tablet){ }

// Clearfix
@mixin clearFix() {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
    display: block;
    height: 1px;
    margin-top: -1px;
    visibility: hidden;
  }

  & {
    *zoom: 1;
  }
}

// container st

/* .container {
    @include clearFix();
    .column{ float: left;}
} */

@mixin push--auto {
  margin: {
    left: auto;
    right: auto;
  }
}

/* @include push--auto() */

@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

/* @include pseudo() */

@mixin input-placeholder {
  &.placeholder {
    @content;
  }

  &::placeholder {
    @content;
  }
}

/* @include input-placeholder() */

@mixin align-image($position) {
  img {
    object-position: $position;
  }
}

/* @include align-image() */

// font size PX into REM
@function calculateRem($size) {
  $remSize: $size / 16px;

  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  font-size: $size; // Fallback in px
  font-size: calculateRem($size);
}

/* h1 { @include fontSize(32px); } */

@function toRem($value) {
  $remValue: ($value / 16) + rem;

  @return $remValue;
}

// .box {
//     width: toRem(400);
//     height: toRem(400);
// }
